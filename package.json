{
  "name": "neversitup",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start:gateway:dev": "nest start gateway --watch",
    "start:users:dev": "npx copyfiles datastore/users/**/* dist/apps/users & nest start users --watch",
    "start:products:dev": "npx copyfiles datastore/products/**/* dist/apps/products & nest start products --watch",
    "start:orders:dev": "npx copyfiles datastore/orders/**/* dist/apps/orders & nest start orders --watch",
    "start:authentication:dev": "npx copyfiles datastore/users/**/* dist/apps/authentication & nest start authentication --watch",
    "build:gateway": "nest build gateway",
    "build:users": "npx copyfiles datastore/users/**/* dist/apps/users & nest build users ",
    "build:products": "npx copyfiles datastore/products/**/* dist/apps/products & nest build products ",
    "build:orders": "npx copyfiles datastore/orders/**/* dist/apps/orders & nest build orders ",
    "build:authentication": "npx copyfiles datastore/users/**/* dist/apps/authentication & nest build authentication ",
    "build:all": "npm run build:gateway & npm run build:users & npm run build:products  & npm run build:orders  & npm run build:authentication",
    "start:gateway:prod": " node dist/apps/gateway/apps/gateway/src/main",
    "start:users:prod": "npx copyfiles datastore/users/**/* dist/apps/users & node dist/apps/users/apps/users/src/main",
    "start:products:prod": "npx copyfiles datastore/products/**/* dist/apps/products & node dist/apps/products/apps/products/src/main",
    "start:orders:prod": "npx copyfiles datastore/orders/**/* dist/apps/orders & node dist/apps/orders/apps/orders/src/main",
    "start:authentication:prod": "npx copyfiles datastore/users/**/* dist/apps/authentication & node dist/apps/authentication/apps/authentication/src/main",
    "start:all": "pm2 start ecosystem.config.js",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "migrate:productdb": "npx prisma migrate dev --name=init_products_db --schema=prisma/products.prisma",
    "migrate:orderdb": "npx prisma migrate dev --name=init_orders_db --schema=prisma/orders.prisma",
    "migrate:usersdb": "npx prisma migrate dev --name=init_users_db --schema=prisma/users.prisma",
    "migrate:all": "npm run migrate:productdb & npm run migrate:orderdb & npm run migrate:usersdb",
    "studio:users": "npx prisma studio  --schema=prisma/users.prisma",
    "studio:orders": "npx prisma studio --schema=prisma/orders.prisma",
    "studio:products": "npx prisma studio  --schema=prisma/products.prisma",
    "dataseed": "ts-node ./prisma/seed.ts"
  },
  "dependencies": {
    "@anatine/zod-nestjs": "^1.9.2",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.3.1",
    "@nestjs/core": "^9.0.0",
    "@nestjs/jwt": "^10.0.2",
    "@nestjs/microservices": "^9.3.12",
    "@nestjs/passport": "^9.0.3",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/swagger": "^6.2.1",
    "@node-rs/argon2": "^1.4.0",
    "@prisma/client": "^4.8.0",
    "nats": "^2.13.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "swagger-ui-express": "^4.6.2",
    "zod": "^3.21.4"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "28.1.8",
    "@types/node": "^16.0.0",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "28.1.3",
    "prettier": "^2.3.2",
    "prisma": "^4.8.0",
    "supertest": "^6.1.3",
    "ts-jest": "28.0.8",
    "ts-node": "^10.0.0",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@common/core(|/.*)$": "<rootDir>/libs/common/src/$1"
    }
  }
}
